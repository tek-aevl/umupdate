#!/bin/bash
echo "## To use this in cli use"
echo "sudo nano /bin/usr/kernelchk
# copy the next 3 lines into it with, and chmod it to 755  
#!/bin/bash
bash <(curl -s https://git.aevl.net/tek/umupdate/raw/branch/main/kernelchk)
echo 'bye'
#To use run
bash kernelchk
";sleep 4
echo "Hello "$USER" and welcome this is "$HOSTNAME
echo "Kernel  linux-zen version check"
uname -a | lolcat

RED='\033[0;31m'       # Red color
LIGHT_RED='\033[0;91m'    # Light red color
YELLOW='\033[0;33m'    # Yellow color
LIGHT_YELLOW='\033[0;93m' # Light yellow color
GREEN='\033[0;32m'     # Green color
LIGHT_GREEN='\033[0;92m'  # Light green color
BLUE='\033[0;34m'         # Blue color
LIGHT_BLUE='\033[0;94m'   # Light blue color
MAGENTA='\033[0;35m'      # Magenta color
CYAN='\033[0;36m'         # Cyan color
WHITE='\033[0;37m'        # White color
LIGHT_GRAY='\033[0;90m'   # Light gray color
CYAN='\033[0;30m'    # Dark gray color
NC='\033[0m'           # No color
echo -e "This ${RED}text${NC} is ${RED}red.${NC}"
echo -e "This ${YELLOW}text${NC} is ${YELLOW}yellow.${NC}"
echo -e "This ${GREEN}text${NC} is ${GREEN}green.${NC}"

running_kernel=$(uname -r | sed 's/-zen$//;s/-/./')
installed_kernel=$(pacman -Qi linux-zen | awk '/Version/ {print $3}')
uptime=$(uptime -p)

function version_compare() {
    if [[ $1 == $2 ]]; then
        echo "equal"
    elif [[ $1 < $2 ]]; then
        echo "less than"
    else
        echo "greater than"
    fi
}

comparison_result=$(version_compare "$running_kernel" "$installed_kernel")

echo -e "${BLUE}Comparison Result:${MAGENTA} $comparison_result ${NC}"

if [[ "$comparison_result" != "equal" ]]; then
        echo -e "${GREEN}Running Kernel: $running_kernel${NC}"
        echo -e "${CYAN}Installed Kernel: $installed_kernel${NC}"
        echo -e "${BLUE}System Uptime: $uptime${NC}"
        echo -e "Running kernel does not ${RED}match${NC} the installed kernel."
        echo -e "${RED}You SHOULD reboot the system. Asap!${NC}"
        sleep 5
elif [[ $uptime == *"day"* ]]; then
    days=$(echo $uptime | awk '{print $2}')
    if (( days > 6 )); then
        echo -e "${LIGHT_BLUE}Running Kernel: $running_kernel${NC}"
        echo -e "${LIGHT_BLUE}Installed Kernel: $installed_kernel${NC}"
        echo -e "${RED}System Uptime: $uptime${NC}"
        echo -e "Running kernel matches installed kernel, but the system has been running for more than 6 days."
        echo -e "It is ${YELLOW}recommended${NC} to ${YELLOW}reboot${NC} the system."
        sleep 5
   else
        echo -e "${GREEN}Running Kernel: $running_kernel${NC}"
        echo -e "${GREEN}Installed Kernel: $installed_kernel${NC}"
        echo -e "${MAGENTA}}System Uptime: $uptime${NC}"
        echo -e "Running kernel matches installed kernel and the system has been running for less than 6 days."
        echo -e "${GREEN}No reboot${NC} is necessary at this time."
        sleep 5
    fi
else
        echo -e "${GREEN}Running Kernel: $running_kernel${NC}"
        echo -e "${CYAN}Installed Kernel: $installed_kernel${NC}"
        echo -e "${GREEN}System Uptime: $uptime${NC}"
        echo -e "Running kernel matches installed kernel and the system has been running for less than 6 days."
        echo -e "${GREEN}All Checks PASSED.${NC}"
        sleep 5
fi

sleep 6